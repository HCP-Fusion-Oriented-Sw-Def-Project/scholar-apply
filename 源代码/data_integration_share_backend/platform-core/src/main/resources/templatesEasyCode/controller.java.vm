##导入宏定义
$!define

##设置表后缀（宏定义）
#setTableSuffix("Controller")

##保存文件（宏定义）
#save("/controller", "Controller.java")

##包路径（宏定义）
#setPackageSuffix("controller")

##定义服务名
#set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), "Service"))

##定义实体对象名
#set($entityName = $!tool.firstLowerCase($!tableInfo.name))


import $!{tableInfo.savePackageName}.entity.$!tableInfo.name;
import $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;
import org.springframework.web.bind.annotation.*;
import org.springframework.validation.annotation.Validated;
import com.example.gbdpbootcore.httpResult.Result;
import com.example.gbdpbootcore.httpResult.ResultGenerator;
import com.example.gbdpuserac.core.BaseController;
import com.example.gbdpbootcore.page.PageRequest;
import com.example.gbdpbootcore.page.PageResult;
import com.example.gbdpuserac.core.Service;
import com.example.gbdpbootcore.validation.CreateGroup;
import com.example.gbdpbootcore.validation.UpdateGroup;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import javax.annotation.Resource;
import java.io.Serializable;
import java.util.List;

##表注释（宏定义）
#tableComment("表控制层")
@Api(value = "$!{tableName}")
@RestController
@RequestMapping("$!tool.firstLowerCase($!tableInfo.name)")
public class $!{tableName} extends BaseController{

/**
 * 服务对象
 */
    @Resource
    private $!{tableInfo.name}Service $!{serviceName};

    @PostMapping
    public Result save(@RequestBody @Validated(CreateGroup.class) $!tableInfo.name $!entityName){
        int i=$!{serviceName}.saveOrUpdate($!entityName);
        return i>0?ResultGenerator.genSuccessResult():ResultGenerator.genFailResult("insert失败");
        }

    @DeleteMapping("/{id}")
    public Result delete(@PathVariable String id){
        int i=$!{serviceName}.deleteById(id);
        return i>0?ResultGenerator.genSuccessResult():ResultGenerator.genFailResult("deleteById失败");
        }

    @DeleteMapping
    public Result deleteByIds(@RequestBody String idsStr){
        int i=$!{serviceName}.deleteByIds(idsStr);
        return i>0?ResultGenerator.genSuccessResult():ResultGenerator.genFailResult("deleteList失败");
        }

    @PutMapping
    public Result update(@RequestBody @Validated(UpdateGroup.class) $!tableInfo.name $!entityName){
        int i=$!{serviceName}.saveOrUpdate($!entityName);
        return i>0?ResultGenerator.genSuccessResult():ResultGenerator.genFailResult("update失败");
        }

    @GetMapping("/{id}")
    public Result get(@PathVariable String id){
        $!tableInfo.name $!entityName=$!{serviceName}.getById(id);
        return ResultGenerator.genSuccessResult($!entityName);
        }

    @GetMapping
    public Result list(PageRequest pageRequest, $!tableInfo.name $!entityName){
        return ResultGenerator.genSuccessResult($!{serviceName}.page(pageRequest, $!entityName));
    }

    @GetMapping("/all")
    public Result listAll($!tableInfo.name $!entityName){
        List<$!tableInfo.name> list = $!{serviceName}.list($!entityName);
        return ResultGenerator.genSuccessResult(list);
    }
}
